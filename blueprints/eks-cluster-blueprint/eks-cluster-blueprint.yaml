spec_version: 2
description: EKS cluster
# blueprint inputs can be provided by the user, API or CI plugin when creating an environment from this blueprint.
inputs:
  region:
    display-style: normal
    default: us-east-2
  host_name:
    type: string
    display-style: normal
# blueprint outputs define which data that was generated during environment provisioning will be returned to the user, API or CI.
outputs:
  account_id:
    value: '{{ .grains.eks-cluster.outputs.account_id }}'
  caller_arn:
    value: '{{ .grains.eks-cluster.outputs.caller_arn }}'
  caller_user:
    value: '{{ .grains.eks-cluster.outputs.caller_user }}'
  caller_username:
    value: '{{ .grains.eks-cluster.outputs.caller_username }}'
  cluster_endpoint:
    value: '{{ .grains.eks-cluster.outputs.cluster_endpoint }}'
  cluster_id:
    value: '{{ .grains.eks-cluster.outputs.cluster_id }}'
  cluster_name:
    value: '{{ .grains.eks-cluster.outputs.cluster_name }}'
  cluster_security_group_id:
    value: '{{ .grains.eks-cluster.outputs.cluster_security_group_id }}'
  config_map_aws_auth:
    value: '{{ .grains.eks-cluster.outputs.config_map_aws_auth }}'
  kubectl_config:
    value: '{{ .grains.eks-cluster.outputs.kubectl_config }}'
  region:
    value: '{{ .grains.eks-cluster.outputs.region }}'
grains:
  eks-cluster:
    kind: terraform
    spec:
      source:
        path: github.com/dreckguy/terraform-samples.git//eks-cluster


      host:
      # Execution Host - the platform where the asset executable will run.
      # For example, a Kubernetes cluster can be used as an execution host.
        name: '{{ .inputs.host_name }}'
        # A service account annotated with a role ARN with permissions to run the asset
        service-account: eks-cluster-creator
      inputs:
      - region: '{{ .inputs.region }}'
      # The environment variables declared in this section will be available during the grain deployment as well as the grain destroy phase
      # env-vars:
      # - name: VAR_NAME
      #   value: var value
      env-vars: []
      outputs:
      - account_id
      - caller_arn
      - caller_user
      - caller_username
      - cluster_endpoint
      - cluster_id
      - cluster_name
      - cluster_security_group_id
      - config_map_aws_auth
      - kubectl_config
      - region
      tags:
        auto-tag: false
    # The terraform version that will be used to deploy the module
    tf-version: 1.2.4
